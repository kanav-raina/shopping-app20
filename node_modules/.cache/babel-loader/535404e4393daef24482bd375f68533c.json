{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nexport const getProducts = async () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [products, setProducts] = useState(null);\n  await axios.get('http://localhost:5000/addData').then(response => {\n    setProducts(response.data);\n  });\n  dispatch({\n    type: 'PRODUCT_LIST',\n    payload: products\n  });\n};\n\n_s(getProducts, \"1Bj7YPZv7ubGLJSg1iE2p2ZMMHE=\", false, function () {\n  return [useDispatch];\n});\n\nexport const productReducer = (state = {\n  products: []\n}, action) => {\n  switch (action.type) {\n    case 'PRODUCT_LIST':\n      return {\n        loading: true,\n        products: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/kanav/final/e-comm/src/store/reducers/productReducer.js"],"names":["useDispatch","getProducts","dispatch","products","setProducts","useState","axios","get","then","response","data","type","payload","productReducer","state","action","loading"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,WAAW,GAAC,YAAS;AAAA;;AAC9B,QAAMC,QAAQ,GAACF,WAAW,EAA1B;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAuBC,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMC,KAAK,CAACC,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAY;AAC9DL,IAAAA,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAX;AACH,GAFK,CAAN;AAGAR,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAC,cAAN;AAAqBC,IAAAA,OAAO,EAACT;AAA7B,GAAD,CAAR;AACH,CAPM;;GAAMF,W;UACMD,W;;;AAQnB,OAAO,MAAMa,cAAc,GAAG,CAACC,KAAK,GAAG;AAAEX,EAAAA,QAAQ,EAAE;AAAZ,CAAT,EAA2BY,MAA3B,KAAsC;AAChE,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,cAAL;AACE,aAAO;AAAEK,QAAAA,OAAO,EAAE,IAAX;AAAiBb,QAAAA,QAAQ,EAAEY,MAAM,CAACH;AAAlC,OAAP;;AAEF;AACE,aAAOE,KAAP;AALJ;AAOD,CARI","sourcesContent":["import { useDispatch } from \"react-redux\"\n\nexport const getProducts=async()=>{\n    const dispatch=useDispatch()\n    const [products,setProducts]=useState(null)\n    await axios.get('http://localhost:5000/addData').then((response)=>{\n        setProducts(response.data)\n    })\n    dispatch({type:'PRODUCT_LIST',payload:products})\n}\n\nexport const productReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n      case 'PRODUCT_LIST':  \n        return { loading: true, products: action.payload }\n\n      default:\n        return state\n    }\n  }\n  \n"]},"metadata":{},"sourceType":"module"}